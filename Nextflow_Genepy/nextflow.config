// use -f --fakeroot in running apptainer with IRIDIS6
process.executor = 'slurm'
// process.queue = 'serial'
dag.enabled = true
dag.overwrite = true
apptainer.enabled =  true
apptainer.autoMounts =  true
trace.overwrite = true
 
params {

basedir=""
// general config
chromosomes = params.chr ?: '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,"X","Y","M"'

// INPUT FILE
vcf = "/path/your/*.vcf.gz"
// 
annotations_cadd = "${basedir}/data/GRCh38_v1.6/"                 
homos_vep = "${basedir}/data/"                                                                                                   // https://ftp.ensembl.org/pub/release-111/variation/vep/     for homosapiens  // curl -O https://ftp.ensembl.org/pub/release-111/variation/vep/homo_sapiens_vep_111_GRCh38.tar.gz
bed_int = "${basedir}/templates/CCDS_hg38_pad25_sorted.bed"


// containers localy if exist add the path infront of each, otherwise leave it empty like ""
cadd_  =  ""
vep_  =   ""
GATK4 =   ""
pyR =   ""

// vep plugins
plugin1 = "${basedir}/data/whole_genome_SNVs.tsv.gz"
plugin2 = "${basedir}/data/gnomad.genomes.r3.0.indel.tsv.gz"
vep_plugins = "${basedir}/templates/Plugins" 
custom1 = "${basedir}/templates/gnomad.genomes.v3.1.1.RF_flag.vcf.gz"
custom1_index = "${basedir}/templates/gnomad.genomes.v3.1.1.RF_flag.vcf.gz.tbi"



//
cadd_filter= "ALL"
header_meta = "${basedir}/header.meta_org"
genepy_py = "${basedir}/templates/genepy.py"


// gene chunks
chunk_size = 1000

gene_code_bed = "${basedir}/templates/gencode.v45.annotation_2.bed"

templates="${basedir}/templates"

}

 env {
     HOME="$PWD"
}

report {
    enabled = true
    file = "${params.output}/Report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.output}/Timeline.html"
    overwrite = true
}



profiles {
    // Local profile with specific container paths
    local {
        process {
            withName:CADD_score {
                containerOptions = "-B ${params.annotations_cadd}:/opt/CADD-scripts-CADD1.6/data/annotations/GRCh38_v1.6/"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "8 GB"
                container = params.cadd_
            }
            withName:VEP_score {
                containerOptions = "-B ${params.output},${params.homos_vep},${params.vep_plugins},${params.plugin1},${params.plugin2},${params.basedir}/data,${params.custom1},${params.custom1_index}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 22
                memory = "8 GB"
                container = params.vep_
            }
            withName:Merging_chunks {
                containerOptions = "-B ${params.output}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "16 GB"
                container = params.GATK4
            }
            withName:Pre_processing_1 {
                containerOptions = "-B ${params.output},${params.vcf},${params.bed_int}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "16 GB"
                container = params.cadd_
            }
            withName:Pre_processing_3 {
                containerOptions = "-B ${params.output},${params.vcf},${params.gene_code_bed},${params.header_meta},${params.basedir}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "48 GB"
                container = params.cadd_
            }
            withName:Genepy_score {
                containerOptions = "-B ${params.output},${params.genepy_py},${params.basedir}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 25
                memory = "12 GB"
                container = params.pyR
            }
        }
    }
    // Docker Hub profile with container paths
    dockerhub {
        process {
            withName:CADD_score {
                containerOptions = "-B ${params.annotations_cadd}:/opt/CADD-scripts-CADD1.6/data/annotations/GRCh38_v1.6/"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "8 GB"
                container = 'docker://parsboy66/cadd1.6ens95:latest'
            }
            withName:VEP_score {
                containerOptions = "-B ${params.output},${params.homos_vep},${params.vep_plugins},${params.plugin1},${params.plugin2},${params.basedir}/data,${params.custom1},${params.custom1_index}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 22
                memory = "8 GB"
                container = 'docker://parsboy66/vep:v1'
            }
            withName:Merging_chunks {
                containerOptions = "-B ${params.output}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "16 GB"
                container = 'docker://broadinstitute/gatk:4.1.3.0'
            }
            withName:Pre_processing_1 {
                containerOptions = "-B ${params.output},${params.vcf},${params.bed_int}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "16 GB"
                container = 'docker://parsboy66/cadd1.6ens95:latest'
            }
            withName:Pre_processing_3 {
                containerOptions = "-B ${params.output},${params.vcf},${params.gene_code_bed},${params.header_meta},${params.basedir}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 24
                memory = "48 GB"
                container = 'docker://parsboy66/cadd1.6ens95:latest'
            }
            withName:Genepy_score {
                containerOptions = "-B ${params.output},${params.genepy_py},${params.basedir}"
                clusterOptions = '--nodes=1 --time=48:00:00'
                cpus = 25
                memory = "12 GB"
                container = 'docker://parsboy66/rnaseq:updated'
            }
            
        }
    }
}





process {
    withName:Pre_processing_2 {
        containerOptions = "-B ${params.output},${params.vcf} -f"
        clusterOptions = '--nodes=1 --time=48:00:00 '
        cpus = 24
        memory = "16 GB"
        
    }

}


process {
    withName:SplitByGene {
        containerOptions = "-B ${params.output},${params.vcf}  -f"
        clusterOptions = '--nodes=1 --time=48:00:00'
        cpus = 8
        memory =  "8 GB"
    }
}
process {
    withName:Meta_file_extraction {
    containerOptions = "-B ${params.output},${params.basedir}  -f"
        clusterOptions = '--nodes=1 --time=48:00:00'
        cpus = 24
        memory = "36 GB"
    }
}
